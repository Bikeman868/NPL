// GetGraph messages are processed by reading records from the database
// and emitting a Graph message containing the state transition graph
namespace app.persistence {
    network database {
        process dataAccessLayer {
            accept GetGraph getGraph {
                emit npl.persistence.Query {
                    message {
                        name 'getGraphStates'
                        language 'SQL'
                        version 'MySQL'
                        query 'select 
                                 stateCode, stateNname, transitions
                               from graphStates'
                    }
                } await npl.persistence.QueryResult getStatesResult
                
                emit npl.persistence.Query {
                    message {
                        name 'getGraph'
                        language 'SQL'
                        version 'MySQL'
                        query 'select startingStateCode from graph'
                    }
                } await npl.persistence.QueryResult getGraphResult

                var startingStateCode getGraphResult.rows[0]['startingStateCode']

                var states {}
                for row of getStatesResult.rows {
                    const stateCode row['stateCode']
                    const state app.stateGraph.State { 
                            message {
                                stateCode row['stateCode']
                                stateNname row['stateNname']
                                transitions JSON.parse(
                                    row['transitions']
                                )
                            }
                        }
                    set states {
                        ...states
                        stateCode state
                    }
                }
                
                emit app.stateGraph.Graph {
                    message {
                        startingStateCode config.startingStateCode
                        states states
                    }
                }
            }
        }
    }
}
